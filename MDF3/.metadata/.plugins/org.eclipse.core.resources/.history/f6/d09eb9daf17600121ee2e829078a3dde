package com.lpuente.project_2;

import android.media.MediaPlayer;
import android.net.Uri;
import android.os.Bundle;
import android.app.Activity;
import android.content.Context;
import android.content.pm.ActivityInfo;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.MediaController;
import android.widget.TabHost;
import android.widget.Toast;
import android.widget.TabHost.TabSpec;
import android.widget.VideoView;

public class Main extends Activity{
	
	//Really enjoyed the video for media will use as example as well as example from
	//previous project using audio mp
	
	//Global Vars audio
	String playButtonText;
	MediaPlayer mP;
	Button playButt;
	
	//Glob. Vars for video
	String vidText;
	VideoView vw;
	
	//seen this done various times. I'll just go with it
	Context _this;
	
	//var for tab 2 GPS class
	GPSclass gps;
	


    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main_lay);
        
        
        //im sure theres a better way around the audio issues when changing from port to land. but locking it is ok for now
        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
        
        //Setting Context
        _this = this;	
        
        
        
        
        
        //setting up the tab host and etc. This is new to me but mostly makes sense
        
        TabHost th = (TabHost) findViewById(R.id.tabhost);
        
        th.setup();
        
        
        
/////////////////////////SETUP FOR TAB 1////////////////////////////////////////////////
        TabSpec tspecs = th.newTabSpec("tag1");
        tspecs.setContent(R.id.tab1);				//LinearLay/tab by id 
        tspecs.setIndicator("Audio & Video");		//name within tab
        th.addTab(tspecs);							//adding all above to tabs
        
        
        
       
        //Setting Media Player song
        mP = MediaPlayer.create(Main.this, R.raw.mxpx);
        
        
        //Setting play button
        
        playButt = (Button) findViewById(R.id.playB);
        
        //beginning with Play for the button text setting before onClickListener
        playButtonText = " Play ";
        
        
        
        
        //Start and Pause using the same button. As well as changing the text as user interacts
        
        playButt.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				
				//using conditional to start or pause song
				
				if(playButtonText.equals(" Play "))
				{
					//starts song
					mP.start();
					
					//text will change to "Pause"
					playButtonText = "Pause";
					//setting text
					playButt.setText(playButtonText);
				}
				else
				{
					//same idea here as above except in reverse and pausing the mP. easy to do this since there are
					//only two options of play and pause
					mP.pause();
					playButtonText = " Play ";
					playButt.setText(playButtonText);
				}
				
			}
		});
        
        //set the play button text to the String to determine whether text is Play or Pause
        playButt.setText(playButtonText);
        
       
		////////////////Code for Video//////////////Similar to audio above////////////////
        
        Button vidButt = (Button) findViewById(R.id.playVid);
        
        //video button listener
        vw = (VideoView) findViewById(R.id.vidview);
        
        vidButt.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
			
				//Set to play the video
				
				//vw = (VideoView) findViewById(R.id.vidview);
				
				
				//using a URI for video path for raw folder/file path
				
				String uriPath = "android.resource://" + getPackageName() + "/" + R.raw.doing_time;
				
				//collecting path then parsing string to uri
				vw.setVideoURI(Uri.parse(uriPath));
				
				//setting media controller to context _this
				vw.setMediaController(new MediaController(_this));
				
				
				//starting video
				vw.start();
				
			}
		});
/////////////////////////////////////////////////////////////TAB 1 END//////////////////       
     
        
        
/////////////////////////SETUP FOR TAB 2////////////////////////////////////////////////
        tspecs = th.newTabSpec("tag2");
        tspecs.setContent(R.id.tab2);				//LinearLay/tab by id 
        tspecs.setIndicator("GPS");		//name within tab
        th.addTab(tspecs);		
        
        
        Button showLocation = (Button) findViewById(R.id.locationB);
        
        //"Where I'm At" listener
        showLocation.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				
				//class object for gps class
				gps = new GPSclass(Main.this);
				
				
				//Checking if GPS is on
				if(gps.canGetLocation())
				{
					double latitude = gps.getLatitude();
					double longitude = gps.getLongitude();
					
					//displaying results in a toast
					Toast.makeText(getApplicationContext(), 
							"I am somewhere very close to: \n Lat: " + latitude +
							"\n Long: " + longitude, Toast.LENGTH_LONG).show();
				}
				else
				{
					//allow user to view alert to give option to turn gps on if it is off
					gps.showSetting();
				}
			}
		});
        
/////////////////////////////////////////////////////////////TAB 2 END////////////////// 
        
        
        
/////////////////////////SETUP FOR TAB 3////////////////////////////////////////////////
tspecs = th.newTabSpec("tag3");
tspecs.setContent(R.id.tab3);				//LinearLay/tab by id 
tspecs.setIndicator("Tab 3");		//name within tab
th.addTab(tspecs);		
/////////////////////////////////////////////////////////////TAB 3 END////////////////// 
    }

    
    
    
    
    
 ////////////////////////////////////////////////////////   
    //Unused
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.main_lay, menu);
        return true;
    }
}
